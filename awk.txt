awk -F "," '{print $1 " " $3}' file/txt
awk '{print $1 " " $3}' FS="," file.txt

$1 - print first column
$0 - print all colums
-F used to define a separator (default is space/tab)
FS used for the same

NR - number of raw
awk 'NR>2{print$1 " " $2}' file.txt // print from raw 3
awk 'NR!=1{print$1 " " $2}' file.txt // skip first line
awk 'NR<3{print$1 " " $2}' file.txt // print 2 first raws


awk '$1==1{print$1 " " $2}' file.txt //print 1st and 2nd columns of the raw only if 1st collumn equals 1 
awk '$2=="aaaaa"{print$1 " " $3}' file.txt //print 1st and 3rd columns of the raw only if 2nd collumn equals aaaaa
awk '$1>20{print$1 " " $2}' file.txt // greater than... 
awk '$1>20 || $2>1{print$1 " " $2}' file.txt // multiple conditiones using || (OR), use && for AND
awk '/text/{print$1}' file.txt //print 1st column of the raw if the string "text" exists anyware in the raw
awk '!/text/{print$1}' file.txt //no "text" in raw...
awk '$2~/text/{print$1}' file.txt //print only if "text" is in column 2 (no metter when)
awk '$2~/^text/{print$1}' file.txt //print only if colums starts with "text"
awk '$2~/text$/{print$1}' file.txt //print only if colums ends with "text"
